{"name":"CO2 and Heat Content: A Rising Trend?","tagline":"","body":"\r\n# Introduction\r\n\r\nThis notebook shows a simple example on how to start using IPython Notebooks.\r\n\r\nWe start from basic stuff, namely, loading your data, working with arrays and so\r\non.\r\n\r\nThen, we show you how to make your notebook a bit more interactive by giving the\r\nuser the freedom to play with some parameters.\r\n\r\nFinally, we show you how you can publish your notebook on Github so that it can\r\nbe shared with, for instance, your colleagues or your students.\r\n\r\n## About the example\r\n\r\nTo make the notebook more coherent, we have selected a simple example that uses\r\nreal data about a very serious issue of our time: **global warming**.\r\n\r\nWe assume that you have recently published a paper on how *the amount of CO2*\r\nreleased into the atmoshpehere is correlated with *oceans' global heat content*.\r\nWe assume that you have analyzed the data, published it in a paper\r\n[here](paper_link) and at this point would like to share the code with your\r\ncolleagues.\r\n\r\nLet's get started then!\r\n\r\n# Loading the Data\r\n\r\nWe first start by loading the data. We assume that the data is stored in a file\r\ncalled `CO2Data.csv` in the `/Data/` folder.\r\n\r\nHere's a snapshot of the CSV file.\r\n\r\nIn short, our csv file has has *14* \"columns\" that contain the data we are\r\ninterested in. These columns that we are interested in correspond to\r\n\r\n1. Mauna Loa: the amount of CO2 measured at the first location (in ppm)\r\n2. CO2 Dates: the dates when CO2 amount was measured in ppm\r\n3. South Pole: the amount of CO2 measured at the second location (in ppm)\r\n4. Heat content: oceans' heat content (in 10^22 J)\r\n5. Heat Content Dates: the dates where amount of heat content is measured\r\n6. +2 Standard Error: standard deviation for the heat content\r\n7. -2 Standard Error: standard deviation for the heat content\r\n8. Temperature Anomaly: the deviation in the temperature\r\n9. Temperature Dates: the dates where heat content was measured\r\n\r\nSource: <a href=\"http://scrippsco2.ucsd.edu/\">Scripps CO<sub>2</sub></a><br><a\r\nhref=\"http://www.carbonbrief.org/blog/2013/09/ipcc-six-graphs-that-explain-how-\r\nthe-climate-is-changing/\">The Carbon Brief</a> & <a\r\nhref=\"http://www.economist.com/blogs/graphicdetail/2012/05/daily-chart-1\">The\r\nEconomist</a>\r\n\r\n### Initialization\r\n\r\nWe start by importing the necessary libraries and initializing our data\r\nvariables\r\n\r\n\r\n    import csv                                    # Import the necessary library to work with csv files                              \r\n\r\nNow the command below creates an *empty* dcitionaries whose *keys* match those\r\nof our csv file.\r\n\r\nThis will become handy since we want to organize our data into columns later.\r\n\r\n\r\n    data_entries = {'Heat Content':[],\r\n                    'Mauna Loa':[],\r\n                    'CO2 Dates':[],\r\n                    'South Pole':[],\r\n                    'Heat Content Dates':[],\r\n                    '+2 Standard Error':[],\r\n                    '-2 Standard Error':[],\r\n                    'Temperature Anomaly':[],\r\n                    'Temperature Dates':[],\r\n                    'trace6':[],\r\n                    'trace7':[],\r\n                    'trace8':[],\r\n                    'trace9':[],\r\n                    'trace10':[]}\r\n\r\n### Reading the Data\r\n\r\nWe now load the columns' data from the csv file into the *data_entries*\r\nvariable.\r\n\r\n\r\n    data_file_name = './Data/CO2Data.csv'\r\n    with open(data_file_name, 'rb') as f:\r\n        reader = csv.DictReader (f)\r\n        for line in reader:\r\n            for item in line:\r\n                if 'Dates' not in item:\r\n                    if line[item]:\r\n                        data_entries[item].append(float(line[item]))\r\n                else:\r\n                    if line[item]:\r\n                        data_entries[item].append(line[item])\r\n                        #data_entries[item].append(int(line[item][0:4]))\r\n\r\nTo make sure that we have importted the data correctly, let's print the first 8\r\ndates when the CO2 amount was measured.\r\n\r\n\r\n    print data_entries['CO2 Dates'][0:8]\r\n\r\n    ['1958-03-01', '1958-04-01', '1958-05-01', '1958-06-01', '1958-07-01', '1958-08-01', '1958-09-01', '1958-10-01']\r\n\r\n\r\n# Basic Plots\r\n\r\nLet's start with our first plot, namely, *global ocean heat content* as a matter\r\nof time.\r\n\r\nWe start by import *matplotlib*, a Python library that handles plots elegantly.\r\n\r\n\r\n    import matplotlib.pyplot as plt                # Import the necessary library to plot results\r\n\r\nWe then make sure that plots are displayed within the cells and adjust their\r\nsize.\r\n\r\n\r\n    %matplotlib inline  \r\n    plt.rcParams['figure.figsize'] = (16.0, 10.0)\r\n\r\nIt is time to plot our first result. We first re-organize our x-axis dates to\r\nonly contain the years.\r\n\r\n\r\n    years = []\r\n    for item in data_entries['Heat Content Dates']:\r\n        years.append(int(item[0:4]))\r\n\r\nThen, prepare the axis labels and plot title before plotting the results.\r\n\r\n\r\n    fig = plt.figure()\r\n    fig.suptitle('Global Ocean Heat Content', fontsize=20)\r\n    #plt.xlabel('Year', fontsize=18)\r\n    plt.ylabel('Heat Content ($10^{22}$J)', fontsize=16)\r\n    \r\n    plt.plot(years,data_entries['Heat Content'],linewidth=2)\r\n    plt.show()\r\n\r\n\r\n![png](CO2Example_files/CO2Example_26_0.png)\r\n\r\n\r\nFinally, save the figure if you want.\r\n\r\n\r\n    fig.savefig('./Results/HeatContent_vs_Year.png')\r\n\r\n### The Second Plot\r\n\r\nNow let us plot the amount of CO2 in the atmosphere in the course of the years.\r\n\r\nNote that we now have to pieces of data, one corresponding to *South Pole* and\r\nthe other capturing CO2 in *Mauna Loa*.\r\n\r\n\r\n    co2_years = []\r\n    for item in data_entries['CO2 Dates']:\r\n        co2_years.append(int(item[0:4]))\r\n\r\n\r\n    fig = plt.figure()\r\n    fig.suptitle('Global Ocean Heat Content', fontsize=20)\r\n    #plt.xlabel('Year', fontsize=18)\r\n    plt.ylabel('$CO_2$ (ppm)', fontsize=16)\r\n    \r\n    plt.plot(co2_years,data_entries['South Pole'],linewidth=2,label='South Pole')\r\n    plt.plot(co2_years,data_entries['Mauna Loa'],linewidth=2,color='r',label='Mauna Loa')\r\n    plt.legend(loc='upper left')\r\n    plt.show()\r\n\r\n\r\n![png](CO2Example_files/CO2Example_33_0.png)\r\n\r\n\r\nAgain, you can save the figure if you want.\r\n\r\n\r\n    fig.savefig('./Results/CO2_vs_Year.png')\r\n\r\n\r\n    \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}